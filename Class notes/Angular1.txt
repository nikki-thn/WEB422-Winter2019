ANGULAR COMPONENT;  has 3 files name.component.css / name.component.ts / name.component.css

--== component.ts ==--
//where component render codes

import { Component } from '@angular/core';

@Component({
  selector: 'app-root', // define selector or where to insert this component
  templateUrl: './app.component.html', //html template
  styleUrls: ['./app.component.css'] //css file for this particular component
})

export class AppComponent {
  title = 'pratice-angular'; //define a property
  myHero: string;
  
  constructor() {
  this.title = 'Tour of Heroes';
  this.myHero = 'Windstorm';
  }
}

--== component.html ==--
//where the html template defined

<!--The content below is only a placeholder and can be replaced.-->
<div style="text-align:center">
  <h1>
    Welcome to {{ title }}! <!-- property -->
  </h1>
</div>

--== DISPLAY DATA ==--

//Showing array property with *ngFor

export class AppComponent {
  title = 'Tour of Heroes';
  heroes = ['Windstorm', 'Bombasto', 'Magneta', 'Tornado'];
  myHero = this.heroes[0];
  template: `
  <h1>{{title}}</h1>
  <h2>My favorite hero is: {{myHero}}</h2>
  <p>Heroes:</p>
  <ul>
    <li *ngFor="let hero of heroes"> /== note the syntax for for loop
      {{ hero }}
    </li>
  </ul>
`
}

---- CREATE A CLASS ----

export class Hero {
  constructor(
    public id: number,
    public name: string) { }
}

//see code above

heroes = [
  new Hero(1, 'Windstorm'),
  new Hero(13, 'Bombasto'),
  new Hero(15, 'Magneta'),
  new Hero(20, 'Tornado')
];
myHero = this.heroes[0];

template: `
  <h1>{{title}}</h1>
  <h2>My favorite hero is: {{myHero.name}}</h2>
  <p>Heroes:</p>
  <ul>
    <li *ngFor="let hero of heroes">
      {{ hero.name }}
    </li>
  </ul>
`


--=== Conditional display with NgIf ==---

<p *ngIf="heroes.length > 3">There are many heroes!</p>

--=== Event Binding ===--

<button (click)="deleteHero()">Delete hero</button>

<button (click)="onSave($event)">Save</button>
<button *ngFor="let hero of heroes" (click)="deleteHero(hero)">{{hero.name}}</button>
<form #heroForm (ngSubmit)="onSubmit(heroForm)"> ... </form>

--=== ATTRIBUTE BINDING ===---

<img [src]="heroImageUrl"> //binding igm src attribute to the url define in the component property
<app-hero-detail [hero]="currentHero"></app-hero-detail>
<div [ngClass]="{'special': isSpecial}"></div> //create an attribute with property pair value in angular

DIRECTIVE (AN ANGULAR CLASS): A directive is an Angular class. It interacts with HTML elements in the browser DOM. There are three kinds of directives:
    Components — directives with an HTML template
    Structural directives — they change the DOM layout by adding and removing DOM elements (*ngFor, *ngIf)
    Attribute directives — change the appearance or behavior of an element (ngModel or Two-way binding
